/* Реалізуй функцію sumObjects, яка приймає необмежену кількість об'єктів 
та повертає об'єкт, який об'єднує всі введені об'єкти.

Примітки:

Усі властивості об'єкта матимуть лише числові значення
Якщо ключі об'єктів співпадають, значення відповідних ключів сумуються
Функція завжди повертає об'єкт
Числа в об'єкті можуть бути додатніми і від'ємними
Ти можеш скористатися rest оператором, щоб зібрати агрументи передані в функцію в один масив
Приклади:

const obj = {};
sumObjects() === {}
sumObjects(obj) === {}


sumObjects(first) === {a: 2, b: 4}
sumObjects(first, third) === {a: 2, b: 4, d: -5}
sumObjects(first, second, third) === {a: 4, b: 14, d: -5} */
const first = {a: 2, b: 4};
const second = {a: 2, b: 10};
const third = {d: -5};
debugger
function sumObjects(...rest) {   // оператор rest збирає агрументи, передані в функцію, в один масив
                               /*   rest: Array(3)
                                    0: {a: 2, b: 4}
                                    1: {a: 2, b: 10}
                                    2: {d: -5}
                                    length: 3 */
  const result = {};

  for (let i = 0; i < rest.length; i++) {  // перебираємо масив по-індексно
    for (const key in rest[i]) {  // rest сам по собі - масив, rest[i] - це об"єкт, так як відбувається звернення до певного індексу масива, 
                                  // де він і лежить , key: "a", так як береться перша властивість цього об"єкту
      if (result[key] !== undefined) { // перевірка на те, чи є в об"єкті властивість, яка попала в [key], тобто "a"
        result[key] += rest[i][key]; // якщо так, то в її значення додамо значення властивості [key] з об"єкта rest[i], тобто 2
      } else {                    // rest[i][key] = 2, так як інте-от заходить в об"єкт rest[i], далі у властивість, і повертає її значення
        result[key] = rest[i][key];  // якщо ні, то просто присвоїмо властивості значення іншої властивості [key] з об"єкта rest[i], тобто 2
      }
    }
  }                       // !------  rest - масив, [i] - індекс,  rest[i] - дані, що лежать в і-тому індексі масива rest (наразі об"єкт),
  return result;      // ! [key] - назва ключа (наразі 'a'), rest[i][key] - повертає значення цього ключа -------!!!!!!!!!
}

console.log(sumObjects(first, second, third))
